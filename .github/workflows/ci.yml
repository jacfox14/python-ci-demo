name: Python CI Pipeline

# Purpose of This Workflow
# Automate testing of the Python project so that:
# - Each new commit or pull request is checked automatically, and
# - You are alerted immediately if something breaks.
# GitHub runs the code on a fresh cloud runner each time to avoid "works on my machine" issues.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # Use a strategy matrix to test multiple Python versions (optional)
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    runs-on: ubuntu-latest
    steps:
      # 1) Checkout code
      # Uses the checkout action to clone the repository so subsequent steps can access source files.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Set up Python
      # Installs the requested Python version on the runner (from the matrix).
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3) Cache pip packages to speed up installs between runs
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      # 4) Install dependencies
      # Upgrade pip and install packages from requirements.txt (including pytest).
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5) Run tests
      # Set PYTHONPATH so your repository root can be imported and run pytest.
      - name: Run tests
        run: |
          export PYTHONPATH=$PWD
          pytest --maxfail=5 --disable-warnings
